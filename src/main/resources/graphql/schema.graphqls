type Book {
    id: ID!
    title: String
    pages: Int
    author: Author
}

type Author {
    id: ID!
    name: String
    nationality: String
    age: Int
}

type Response {
    message: String
}

type Query {
    books: [Book]
    getBookById(id: ID!): Book
    search(title: String = "", pages: Int = 0, authorName: String = "", authorNationality: String = ""): [Book]
    authors: [Author]
    getAuthorById(id: ID!): Author
    searchAuthor(name: String = "", nationality: String = ""): [Author]
}

type Mutation {
    updateBook(id: ID!, bookInput: BookInput): Book
    deleteBookById(id: ID!): Response
    createBook(bookInput: BookInput): Book
    updateAuthor(id: ID!, authorInput: AuthorInput): Author
    deleteAuthorById(id:ID!): Response
    saveAuthor(authorInput: AuthorInput): Author
}

input AuthorInput {
    name: String
    nationality: String
    age: Int
}

input BookInput {
    title: String
    pages: Int
    authorId: Int
}
